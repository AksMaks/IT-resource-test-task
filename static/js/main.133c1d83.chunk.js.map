{"version":3,"sources":["components/Main/RegistryForm.js","components/common/renderField.js","components/Main/BidForm.js","components/Main/Form.js","components/People/Table.js","components/People/People.js","components/Profile/ChangeForm.js","components/Profile/AuthForm.js","components/Profile/Profile.js","App.js","reportWebVitals.js","redux/PeopleReducer.js","redux/Store.js","index.js"],"names":["min","max","renderField","input","label","type","disabled","meta","touched","error","warning","className","style","color","placeholder","required","value","undefined","length310","length","RegistryForm","props","handleSubmit","pristine","reset","submitting","invalid","logitDisabled","onSubmit","date","Field","name","component","validate","onClick","textbutton","scope1003000","scope","email","test","phone","slice","replace","check14Years","Date","normalizeDate","setDate","getDate","getFullYear","getMonth","normalizePhone","onlyNums","BidForm","checkboxVisibility","normalize","selector","formValueSelector","connect","state","now","form","registry","initialValues","dateBirth","distance","payment","profile","dispatch","FormData","console","log","data","id","uuidv4","reduxForm","Table","head","map","el","changeSort","key","cursor","title","sort","people","users","useState","path","setPath","setSort","a","b","setPeople","maxPath","changePath","newPath","newSort","temp","fontSize","currentUser","user","authError","App","to","exact","render","People","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","PeopleReducer","action","stateCopy","push","find","password","redusers","combineReducers","formReducer","store","createStore","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.133c1d83.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Field } from 'redux-form';\r\nimport renderField from '../common/renderField'\r\n\r\n//Валидация данные формы\r\nconst required = value => value ? undefined : 'Обязательный'\r\nconst length = (min, max) => value =>\r\n  value && (value.length < min || value.length > max) ? `Должен быть от ${min} до ${max} символов` : undefined\r\nconst length310 = length(3, 10)\r\n\r\n//форма для регистрации\r\nconst RegistryForm = (props) => {\r\n    const { handleSubmit, pristine, reset, submitting, invalid, logitDisabled } = props\r\n    let Submit = (date) => {\r\n      handleSubmit(date)\r\n      reset()\r\n    }\r\n    return (\r\n      <form onSubmit={Submit}>\r\n          <Field \r\n            name=\"email\"\r\n            type=\"text\"\r\n            disabled={false}\r\n            component={renderField}\r\n            label=\"Логин\"\r\n          />\r\n          <Field \r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={renderField} \r\n            label=\"Пароль\"\r\n            validate={[ required, length310 ]}\r\n          />\r\n        <div className=\"mb-2 mt-2\">\r\n          <button className=\"btn btn-secondary mr-2\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Очистить</button>\r\n          <button className=\"btn btn-primary ml-2\" type=\"submit\" disabled={invalid}>{props.textbutton}</button>\r\n      </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default RegistryForm","\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Элемент формы\r\nconst renderField = ({ input, label, type, disabled, meta: { touched, error, warning } }) => (\r\n    <div className={\"form-item\"}>\r\n      <div className={\"form-label\"}>\r\n        <div >{label}</div>\r\n        {touched && ((error && <div style={{color: \"red\"}}>{error}</div>) || (warning && <div>{warning}</div>))}\r\n      </div>\r\n      <div>\r\n        <input className={\"form-control\"} {...input} placeholder={label} type={type} disabled={disabled} />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  export default renderField","import React from 'react';\r\nimport {Field} from 'redux-form';\r\nimport renderField from '../common/renderField'\r\n\r\n//Валидация данных формы\r\nconst required = value => value ? undefined : 'Обязательный'\r\nconst scope = (min, max) => value =>\r\n  value && (value < min || value > max)? `Должен быть от ${min} до ${max}` : undefined\r\nconst scope1003000 = scope(100, 3000)\r\n  const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n  'Неверный адрес электронной почты' : undefined\r\nconst phone = value => value.slice(3).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью\": undefined\r\nconst check14Years = value => ((new Date() - new Date(value))/(14*365*24*3600*1000)) <= 1? \"Участие толко с 14 лет\": undefined\r\n\r\n//нормализация даты рождения (максимум +5 дней от текущей даты)\r\nconst normalizeDate = (value) => {\r\n  if (!value) {\r\n    return value\r\n  }\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + 5)\r\n  if(date < new Date(value)){\r\n    return (date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2))\r\n  }else{\r\n    return value\r\n  }\r\n}\r\n//нормализация номера телефона (приведение к шаблону \"+7 999-999-999\")\r\nconst normalizePhone = (value) => {\r\n    if (!value) {\r\n      return value\r\n    }\r\n  \r\n    const onlyNums = value.slice(3).replace(/[^\\d]/g, '')\r\n    if (onlyNums.length <= 3) {\r\n      return `+7 ${onlyNums}`\r\n    }\r\n    if (onlyNums.length <= 7) {\r\n      return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3)}`\r\n    }\r\n    return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`\r\n}\r\n\r\n//Форма для подачи заявки\r\nconst BidForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, invalid, checkboxVisibility } = props\r\n  let Submit = (date) => {\r\n    handleSubmit(date)\r\n    reset()\r\n  }\r\n  return (\r\n    <form onSubmit={Submit}>\r\n        <Field \r\n          name=\"name\" \r\n          type=\"text\"\r\n          component={renderField} \r\n          label=\"ФИО\"\r\n          validate={[ required ]}\r\n        />\r\n        <Field \r\n          name=\"dateBirth\"\r\n          type=\"date\"\r\n          component={renderField}\r\n          label=\"Дата рождения\"\r\n          validate={[ required, check14Years]}\r\n          normalize={normalizeDate}\r\n        />\r\n        <Field \r\n          name=\"email\" \r\n          type=\"email\"\r\n          component={renderField} \r\n          label=\"Email\"\r\n          validate={[ required, email ]}\r\n        />\r\n        <Field \r\n          name=\"phone\" \r\n          type=\"phone\"\r\n          component={renderField} \r\n          label=\"Телефон\"\r\n          validate={[ required, phone ]}\r\n          normalize={normalizePhone}\r\n        />\r\n      <div className={\"form-item\"}>\r\n        <div className={\"form-label\"}>Дистанция</div>\r\n        <div>\r\n          <Field \r\n            name=\"distance\" \r\n            component=\"select\"\r\n            validate={[ required ]}\r\n          >\r\n            <option value={3}>3км</option>\r\n            <option value={5}>5км</option>\r\n            <option value={10}>10км</option>\r\n          </Field>\r\n        </div>\r\n      </div>\r\n        <Field \r\n          name=\"payment\" \r\n          type=\"number\"\r\n          component={renderField} \r\n          label=\"Сумма взноса\"\r\n          validate={[ required, scope1003000]}\r\n        />\r\n        <Field \r\n          name=\"profile\" \r\n          type=\"checkbox\"\r\n          component={renderField} \r\n          label=\"Создание профиля\"\r\n          disabled={invalid || pristine || submitting}\r\n        />\r\n      <div className=\"mb-2 mt-2\">\r\n        <button className=\"btn btn-secondary mr-2\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Очистить</button>\r\n        <button className=\"btn btn-primary ml-2\" type=\"submit\" disabled={invalid}>{props.textbutton}</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BidForm\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {reduxForm, formValueSelector} from 'redux-form';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport RegistryForm from './RegistryForm'\r\nimport BidForm from './BidForm'\r\n\r\n//Блок, в которой отрысовывается нужная форма\r\nconst Form = (props) => {\r\n    const { registry } = props\r\n    return (\r\n      <div>\r\n        {registry? \r\n          <RegistryForm \r\n            {...props}\r\n            textbutton={\"Регистрация\"}/>: \r\n          <BidForm \r\n            {...props}\r\n            textbutton={\"Отправить заявку\"}/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  \r\nconst selector = formValueSelector('BidForm')\r\n//Дописать исходные значения \r\nlet mapStateToProps = (state) => {\r\n    let now = new Date()\r\n    \r\n    return {\r\n      form: \"BidForm\",\r\n      registry: selector(state, \"profile\"),\r\n      initialValues: {\r\n        name: \"\",\r\n        dateBirth: (now.getFullYear() + '-' + ('0' + (now.getMonth() + 1)).slice(-2) + '-' + ('0' + now.getDate()).slice(-2)),\r\n        email: \"\",\r\n        phone: \"+7 \",\r\n        distance: 3,\r\n        payment: 100,\r\n        profile: false,\r\n        }\r\n    };\r\n  }; \r\n//Написать диспач для добавления участника\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (FormData) => {\r\n      console.log(FormData)\r\n      let now = new Date()\r\n      dispatch({type: \"addUser\", data: {\r\n        ...FormData,\r\n        id: uuidv4(),\r\n        date: (now.getFullYear() + '-' + ('0' + (now.getMonth() + 1)).slice(-2) + '-' + ('0' + now.getDate()).slice(-2))\r\n      }})\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm()(Form));","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Table.css'\r\n\r\nconst Table = (props) => {\r\n    return (\r\n        <div>\r\n            <table className={\"table\"}>\r\n                <thead>\r\n                    <tr>\r\n                    {props.head.map(el => {\r\n                        return (\r\n                            <th \r\n                                key={uuidv4()}\r\n                                onClick={() => props.changeSort(el.key)}\r\n                                style={{cursor: \"pointer\"}}\r\n                            >\r\n                                {el.title}\r\n                                {el.key == props.sort.key? (props.sort.type? \"▲\": \"▼\"): null}\r\n                            </th>\r\n                        )\r\n                    })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.data.map(el => {\r\n                        return (\r\n                            <tr key={uuidv4()}>\r\n                                {props.head.map(head => {\r\n                                    return (\r\n                                        <td key={uuidv4()} data-label={head.title}>{el[head.key]}</td>     \r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Table from './Table';\r\n\r\nconst Participants = (props) => {\r\n    let [path, setPath] = useState(0)\r\n    let [sort, setSort] = useState({key: \"date\", type: false})\r\n    let [people, setPeople] = useState(props.people.sort((a, b) => {\r\n      if(sort.type){\r\n          return (a[sort.key] < b[sort.key])? -1: 1\r\n      }else{\r\n          return (a[sort.key] > b[sort.key])? -1: 1\r\n      }\r\n    }))\r\n    const sizePath = 5 //Размер одной страницы\r\n    let maxPath = props.people.length / sizePath //Максимальная страница\r\n\r\n    //Котроль за номером страницы, чтоб не было отрицательной страницы\r\n    let changePath = (newPath) => {\r\n        if(newPath >= 0 && newPath < maxPath){\r\n            setPath(newPath)\r\n        }\r\n    }\r\n    //Изменение сортировки по направлению или по столбцу\r\n    let changeSort = (newSort) => {\r\n        let temp = {}\r\n        if(newSort == sort.key){\r\n            temp = {key: newSort, type: !(sort.type)}\r\n        }else{\r\n            temp = {key: newSort, type: false}\r\n        }\r\n        setPath(0)\r\n        setSort(temp)\r\n        setPeople(people.sort((a, b) => {\r\n            if(temp.type){\r\n                return (a[temp.key] < b[temp.key])? -1: 1\r\n            }else{\r\n                return (a[temp.key] > b[temp.key])? -1: 1\r\n            }\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <Table \r\n                changeSort={changeSort}\r\n                sort={sort}\r\n                head={[\r\n                    {title: \"ФИО\", key: \"name\"}, \r\n                    {title: \"Дата регистрации\", key: \"date\"}, \r\n                    {title: \"Email\", key: \"email\"},\r\n                    {title: \"Дистанция\", key: \"distance\"},\r\n                    {title: \"Сумма взноса\", key: \"payment\"}]} \r\n                data={people.slice(path*sizePath, (path+1)*sizePath)}/>\r\n            <div className=\"mt-2 mb-2\">\r\n                <button className=\"btn btn-primary\" onClick={() => changePath(path - 1)}>Назад</button>\r\n                <span style={{fontSize: \"18px\"}} className=\"mr-2 ml-2\">{path}</span>\r\n                <button className=\"btn btn-primary\" onClick={() => changePath(path + 1)}>Далее</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        people: state.people.users\r\n    }\r\n}; \r\n//Написать диспач для добавления участника\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Participants);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nimport renderField from '../common/renderField'\r\n\r\n//Валидация данных формы\r\nconst required = value => value ? undefined : 'Обязательный'\r\nconst scope = (min, max) => value =>\r\n  value && (value < min || value > max)? `Должен быть от ${min} до ${max}` : undefined\r\nconst scope1003000 = scope(100, 3000)\r\n  const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n  'Неверный адрес электронной почты' : undefined\r\nconst phone = value => value.slice(3).replace(/[^\\d]/g, '').length < 10?  \"Номер введен не полностью\": undefined\r\nconst check14Years = value => ((new Date() - new Date(value))/(14*365*24*3600*1000)) <= 1? \"Участие толко с 14 лет\": undefined\r\n\r\n//нормализация даты рождения (максимум +5 дней от текущей даты)\r\nconst normalizeDate = (value) => {\r\n  if (!value) {\r\n    return value\r\n  }\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + 5)\r\n  if(date < new Date(value)){\r\n    return (date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2))\r\n  }else{\r\n    return value\r\n  }\r\n}\r\n//нормализация номера телефона (приведение к шаблону \"+7 999-999-999\")\r\nconst normalizePhone = (value) => {\r\n    if (!value) {\r\n      return value\r\n    }\r\n  \r\n    const onlyNums = value.slice(3).replace(/[^\\d]/g, '')\r\n    if (onlyNums.length <= 3) {\r\n      return `+7 ${onlyNums}`\r\n    }\r\n    if (onlyNums.length <= 7) {\r\n      return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3)}`\r\n    }\r\n    return `+7 ${onlyNums.slice(0, 3)}-${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`\r\n}\r\n\r\n//Форма для подачи заявки\r\nconst ChangeForm = (props) => {\r\n  const { handleSubmit, reset, invalid } = props\r\n  let Submit = (date) => {\r\n    handleSubmit(date)\r\n    reset()\r\n  }\r\n  return (\r\n    <form onSubmit={Submit}>\r\n        <Field \r\n          name=\"name\" \r\n          type=\"text\"\r\n          component={renderField} \r\n          label=\"ФИО\"\r\n          validate={[ required ]}\r\n        />\r\n        <Field \r\n          name=\"dateBirth\"\r\n          type=\"date\"\r\n          component={renderField}\r\n          label=\"Дата рождения\"\r\n          validate={[ required, check14Years]}\r\n          normalize={normalizeDate}\r\n        />\r\n        <Field \r\n          name=\"email\" \r\n          type=\"email\"\r\n          component={renderField} \r\n          label=\"Email\"\r\n          validate={[ required, email ]}\r\n        />\r\n        <Field \r\n          name=\"phone\" \r\n          type=\"phone\"\r\n          component={renderField} \r\n          label=\"Телефон\"\r\n          validate={[ required, phone ]}\r\n          normalize={normalizePhone}\r\n        />\r\n      <div className={\"form-item\"}>\r\n        <div className={\"form-label\"}>Дистанция</div>\r\n        <div>\r\n          <Field \r\n            name=\"distance\" \r\n            component=\"select\"\r\n            validate={[ required ]}\r\n          >\r\n            <option value={3}>3км</option>\r\n            <option value={5}>5км</option>\r\n            <option value={10}>10км</option>\r\n          </Field>\r\n        </div>\r\n      </div>\r\n       \r\n        <Field \r\n          name=\"payment\" \r\n          type=\"number\"\r\n          component={renderField} \r\n          label=\"Сумма взноса\"\r\n          validate={[ required, scope1003000]}\r\n        />\r\n      \r\n      <div className=\"mb-2 mt-2\">\r\n        <button className=\"btn btn-primary\" type=\"submit\" disabled={invalid}>{props.textbutton}</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    form: \"ChangeForm\",\r\n    textbutton: \"Сохранить\",\r\n    initialValues: state.people.currentUser\r\n  };\r\n}; \r\n//Написать диспач для добавления участника\r\nlet mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n  onSubmit: (FormData) => {\r\n    dispatch({type: \"changeUser\", data: FormData})\r\n  }\r\n}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm()(ChangeForm));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Field, reduxForm, formValueSelector} from 'redux-form';\r\nimport renderField from '../common/renderField'\r\n\r\n//Валидация данных формы\r\nconst required = value => value ? undefined : 'Обязательный'\r\nconst length = (min, max) => value =>\r\n  value && (value.length < min || value.length > max) ? `Должен быть от ${min} до ${max} символов` : undefined\r\nconst length310 = length(3, 10)\r\n\r\n//форма для авторизации\r\nconst AuthForm = (props) => {\r\n    const { handleSubmit, reset, invalid } = props\r\n    let Submit = (date) => {\r\n      handleSubmit(date)\r\n      reset()\r\n    }\r\n    return (\r\n      <form onSubmit={Submit}>\r\n          <Field \r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={renderField} \r\n            label=\"Пароль\"\r\n            validate={[ required ]}\r\n          />\r\n      <div className=\"mb-2 mt-2\">\r\n        <button className=\"btn btn-primary\" type=\"submit\" disabled={invalid}>{props.textbutton}</button>\r\n      </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      form: \"AuthForm\",\r\n      textbutton: \"Авторизоваться\"\r\n    };\r\n  }; \r\n//Написать диспач для добавления участника\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (FormData) => {\r\n      dispatch({type: \"authUser\", data: FormData})\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm()(AuthForm));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ChengeForm from './ChangeForm';\r\nimport AuthForm from './AuthForm';\r\n\r\nconst Profile = (props) => {\r\n  const { registry } = props\r\n  return (\r\n    <div>\r\n      {props.authError && <div style={{color: \"red\"}}>{props.authError}</div>}\r\n      {props.user? <ChengeForm/>: <AuthForm/>}\r\n    </div>\r\n  )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      user: state.people.currentUser,\r\n      authError: state.people.error\r\n    };\r\n  }; \r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import './App.css';\nimport {Link, Route} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Form from './components/Main/Form';\nimport People from './components/People/People.js';\nimport Profile from './components/Profile/Profile.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className={\"navbar nav\"}>\n        <Link to={\"/\"} className=\"nav-item\">Главная</Link>\n        <Link to={\"/Participants\"} className=\"nav-item\">Участники</Link>\n        <Link to={\"/Profile\"} className=\"nav-item\">Профиль</Link>\n      </div>\n      <Route exact path=\"/\" render={ () => <Form/> }/>\n      <Route path=\"/Participants\" render={ () => <People/> }/>\n      <Route path=\"/Profile\" render={ () => <Profile/> }/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import users from '../users.json'\r\n\r\nlet initialState = {\r\n  ...users,\r\n  currentUser: null,\r\n  error: null\r\n}\r\n\r\nconst PeopleReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state};\r\n    \r\n\tswitch (action.type) {\r\n        case \"addUser\":{ //Добавление участника\r\n            stateCopy.users.push(action.data)\r\n            return stateCopy;\r\n        }case \"authUser\":{ //Авторизация участника\r\n          //поиск учатника\r\n          let user = state.users.find(el => el.password == action.data.password)\r\n          //Если если нету, то ошибка\r\n          if(!!user){\r\n            stateCopy.currentUser = {...user}\r\n            stateCopy.error = null\r\n          }else{\r\n            stateCopy.error = \"Ошибка. Введены неверные данные\"\r\n          }\r\n          return stateCopy\r\n        }case \"changeUser\":{ //Редактирование данных авторизованого участника\r\n          stateCopy.currentUser = null\r\n          stateCopy.users = stateCopy.users.map(el => {\r\n            if(el.id == state.currentUser.id){\r\n              return {...(action.data), id: state.currentUser.id}\r\n            }else{\r\n              return el\r\n            }\r\n          });\r\n          return stateCopy;\r\n        }\r\n\t\tdefault:{\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const ActionCreator = {\r\n    setData: (data) => {\r\n        return {\r\n            type: \"\",\r\n            data: data\r\n        }\r\n    }\r\n}\r\n\r\nexport default PeopleReducer;\r\n","import {combineReducers, createStore} from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport PeopleReducer from './PeopleReducer'\r\n\r\nlet redusers = combineReducers({\r\n    form: formReducer,\r\n    people: PeopleReducer\r\n});\r\n\r\nlet store = createStore(redusers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/Store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nconst RenderAllTree = () => {\n\t\tReactDOM.render(\n\t\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t\t<App/>\n\t\t\t\t\t\t</Provider>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t,\n\t\tdocument.getElementById('root')\n\t);\n};\n\nRenderAllTree();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}